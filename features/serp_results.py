import requestsimport osfrom flask import request, jsonify# Load SERPSTACK API key from environmentSERPSTACK_API_KEY = os.getenv("SERPSTACK_API_KEY")# Function to fetch search resultsdef fetch_search_results(query):    try:        url = f"http://api.serpstack.com/search?access_key={SERPSTACK_API_KEY}&query={query}"        response = requests.get(url)        data = response.json()        if "organic_results" not in data:            return {"error": "No results found or invalid API response."}        results = []        for result in data.get("organic_results", [])[:5]:  # Top 5 results            results.append({                "title": result.get("title"),                "url": result.get("url"),                "description": result.get("description", "No description available.")            })        return results    except Exception as e:        return {"error": str(e)}# Route to handle SERP requestsdef register_serp_routes(app):    @app.route('/serp_results', methods=['POST'])    def serp_results():        try:            data = request.json            query = data.get("query", "").strip()            if not query:                return jsonify({"error": "No search query provided."}), 400            results = fetch_search_results(query)            return jsonify({"data": results})        except Exception as e:            return jsonify({"error": f"Error fetching search results: {str(e)}"}), 500